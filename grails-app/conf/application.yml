---
grails:
    profile: rest-api-plugin
    codegen:
        defaultPackage: com.k_int.web.toolkit
    spring:
        transactionManagement:
            proxies: false
    gorm:
        # Whether to autowire entities. 
        # Disabled by default for performance reasons.
        autowire: false         
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            json:
              - application/json
              - text/json   
            hal:
              - application/hal+json
              - application/hal+xml  
            xml:
              - text/xml
              - application/xml                                 
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            js: text/javascript
            rss: application/rss+xml
            text: text/plain
            all: '*/*'            
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
---
grails:
  gorm:
    multiTenancy:
      mode: DATABASE
      tenantResolverClass: 'org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver'

dataSource:
  pooled: false
  jmxExport: false
  
  dialect: com.k_int.hibernate.dialects.postgres.KIPostgres94Dialect
  driverClassName: org.postgresql.Driver
  dbCreate: create
  url: "jdbc:postgresql://localhost:54321/test"
  username: "test"
  password: "test"
  
environments:
    test-livedb:
      dataSource:
        pooled: false
        jmxExport: false
        
        dialect: com.k_int.hibernate.dialects.postgres.KIPostgres94Dialect
        driverClassName: org.postgresql.Driver
        dbCreate: create
        url: "jdbc:postgresql://localhost:54321/test"
        username: "test"
        password: "test"

      dataSources:
        test:
          dbCreate: create
          url: "jdbc:postgresql://localhost:54321/test2"
          username: "test"
          password: "test"
          driverClassName: org.postgresql.Driver
          dialect: com.k_int.hibernate.dialects.postgres.KIPostgres94Dialect
          
      grails:
        gorm:
          multiTenancy:
            # For testing it's OK to use the DISCRIMINATOR mode
            mode: DATABASE
            tenantResolverClass: org.grails.datastore.mapping.multitenancy.web.SystemPropertyTenantResolver
